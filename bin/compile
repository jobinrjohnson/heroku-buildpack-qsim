#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

set -e
set -o pipefail

BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=${3:-}
BP_DIR=$(cd $(dirname ${0:-}); cd ..; pwd)

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

cd $BUILD_DIR

#instaiiling CMake
echo "Installing CMAKE" | indent
mkdir -p vendor
curl --retry 3 https://cmake.org/files/v3.8/cmake-3.8.1-Linux-x86_64.tar.gz --output vendor/cmake-3.8.1-Linux-x86_64.tar.gz
tar xzf vendor/cmake-3.8.1-Linux-x86_64.tar.gz -C vendor
$BUILD_DIR/vendor/cmake-3.8.1-Linux-x86_64/bin/cmake --version

#install GSL
readonly GSL_VERSION=1.15
echo "-----&gt; Installing GSL ${GSL_VERSION}"
wget -O  gsl-$GSL_VERSION.tar.gz https://github.com/gregory/heroku-gsl-buildpack/raw/gsl-$GSL_VERSION/gsl-$GSL_VERSION.tar.gz
mkdir -p vendor/gsl
tar -C vendor/gsl -xvf gsl-$GSL_VERSION.tar.gz
export LD_LIBRARY_PATH="$BUILD_DIR/vendor/gsl/lib/:$LD_LIBRARY_PATH"
export PKG_CONFIG_PATH="$BUILD_DIR/vendor/gsl/lib/pkgconfig"
sed -i.bak "s/\/usr\/local/vendor\/gsl/g" $BUILD_DIR/vendor/gsl/lib/pkgconfig/gsl.pc
export CPATH=$BUILD_DIR/vendor/gsl/include
export LIBRARY_PATH="$BUILD_DIR/vendor/gsl/lib/:$LIBRARY_PATH"

#Compiling
mkdir build
cd build
echo "-----> Generating with CMake"
$BUILD_DIR/vendor/cmake-3.8.1-Linux-x86_64/bin/cmake ../ 2>&1 | indent
echo "-----> Compiling with Make"
make 2>&1 | indent
cd ..

#set up python
sed -i.bak "s/stdout=PIPE/stdout=PIPE, env=dict(os.environ, LD_LIBRARY_PATH=\"vendor\/gsl\/lib\")/g" main.py
echo "-----> setting up source code."
mkdir temp
echo 'web: gunicorn -b :$PORT main:app' > Procfile
echo "python-3.6.8" > runtime.txt
echo "" > requirements.txt
sed -i.bak "s/var cacheName = 'qsim';/var cacheName = 'qsim$SOURCE_VERSION';/g" $BUILD_DIR/web/sw.js

#cleanup
echo "-----> Cleanup files"
rm -rf vendor/cmake-3.8.1-Linux-x86_64
rm -rf vendor/gsl/include
